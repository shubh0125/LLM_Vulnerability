from CommitInformation import *
import os

class SaveCPPFilesInFolder:

    #the file name in this function is used to save 
    # This code is desgined in a way that the subfolders are based on a Primary Key Column. the "id_for_file_name" variable represents the Primary Key Column in the dataframe and is also the file prefix
    def to_save_as_CPP_files_in_folder(main_folder_name, repository_name, repository_owner, id_for_file_name, Github_Token, Dataframe, Github_CommitHash_Column_name, Github_File_Path_column_name):

        #make main folder
        os.makedirs(main_folder_name, exist_ok=True)

        #iterate through the dataframe each row for specific columns
        for _, row in Dataframe.iterrows():
            # make sub folders.
            folder_name = os.path.join(main_folder_name, row['ID'])
            os.makedirs(folder_name, exist_ok=True)


            id = row[f'{id_for_file_name}']
            commit_hash = row[f'{Github_CommitHash_Column_name}']
            file_path = row[f'{Github_File_Path_column_name}']

            try:
            # Get current commit file content
                current_file_content = CommitInformation.view_file_in_commit(repository_owner, repository_name, commit_hash, file_path, Github_Token)
                if current_file_content is not None:
                    current_file_path = os.path.join(folder_name, f"{id}_commit.cpp")
                    with open(current_file_path, "w") as f:
                        f.write(current_file_content)
                    print(f"Content of '{file_path}' in commit {commit_hash} has been saved to {id}_commit.cpp")
                else:
                    print(f"The file '{file_path}' is not present in the commit {commit_hash}.")

                # Get previous commit hash and file content
                previous_commit_hash = CommitInformation.get_previous_commit(repository_owner, repository_name, commit_hash, Github_Token)
                if previous_commit_hash:
                    previous_file_content = CommitInformation.view_file_in_commit(repository_owner, repository_name, previous_commit_hash, file_path, Github_Token)
                    if previous_file_content is not None:
                        previous_file_path = os.path.join(folder_name, f"{id}_previous_commit.cpp")
                        with open(previous_file_path, "w") as f:
                            f.write(previous_file_content)
                        print(f"\nContent of '{file_path}' in previous commit {previous_commit_hash} has been saved to {id}_previous_commit.cpp")
                    else:
                        print(f"The file '{file_path}' is not present in the previous commit {previous_commit_hash}.")
                else:
                    print("This commit has no parents (initial commit).")
            except Exception as e:
                print(e)


        print(id)
        print(commit_hash)
        print(file_path)
