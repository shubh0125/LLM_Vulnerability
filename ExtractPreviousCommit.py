import requests

# GitHub API base URL
GITHUB_API_URL = "https://api.github.com"

class ExtractPreviousCommit:

    @staticmethod
    def get_commit_details(owner, repo, commit_hash, token):
        url = f"{GITHUB_API_URL}/repos/{owner}/{repo}/commits/{commit_hash}"
        headers = {
            "Authorization": f"token {token}"
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            raise Exception(f"Error fetching commit details: {response.status_code} - {response.text}")

    @staticmethod
    def get_tree(owner, repo, tree_sha, token):
        url = f"{GITHUB_API_URL}/repos/{owner}/{repo}/git/trees/{tree_sha}?recursive=1"
        headers = {
            "Authorization": f"token {token}"
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            raise Exception(f"Error fetching tree: {response.status_code} - {response.text}")

    @staticmethod
    def get_file_content(owner, repo, file_sha, token):
        url = f"{GITHUB_API_URL}/repos/{owner}/{repo}/git/blobs/{file_sha}"
        headers = {
            "Authorization": f"token {token}",
            "Accept": "application/vnd.github.v3.raw"
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return response.text
        else:
            raise Exception(f"Error fetching file content: {response.status_code} - {response.text}")

    @staticmethod
    def find_file_in_tree(tree, file_path):
        for item in tree['tree']:
            if item['path'] == file_path:
                return item['sha']
        return None

    @staticmethod
    def view_file_in_commit(owner, repo, commit_hash, file_path, token):
        commit_details = ExtractPreviousCommit.get_commit_details(owner, repo, commit_hash, token)
        tree_sha = commit_details['commit']['tree']['sha']
        tree = ExtractPreviousCommit.get_tree(owner, repo, tree_sha, token)
        file_sha = ExtractPreviousCommit.find_file_in_tree(tree, file_path)
        if file_sha:
            return ExtractPreviousCommit.get_file_content(owner, repo, file_sha, token)
        else:
            return None

    @staticmethod
    def get_previous_commit(owner, repo, commit_hash, token):
        commit_details = ExtractPreviousCommit.get_commit_details(owner, repo, commit_hash, token)
        parents = commit_details.get('parents', [])
        if not parents:
            return None  # This is the initial commit
        # Assuming linear history, we take the first parent
        return parents[0]['sha']
